var app = angular.module('App', ['ngMaterial', 'ngAnimate', 'ngStorage']);


app.constant('globals', {
    api: 'pankaj',
    fershDeskURL: 'https://InsurerJoy.freshdesk.com/helpdesk/tickets.json',
    encryptionKey: '9080706050403020',
    encryptionIv: '1020304080706050',
    staticKey: 'IG006072021',
    RedirectURL: "https://qa.indiacover360.com/Application/",
    ServiceURL: "https://apiqa.indiacover360.com",
    IGwServiceURL: "https://apiqa.indiacover360.com",
    UIURL: "https://qa.indiacover360.com/HomePage",
    landingPage: "https://qa.indiacover360.com",
    mainPage: "https://qa.indiacover360.com/Application/?CPID=",
});
app.run(function ($window, $rootScope, $location, $http) {
    $rootScope.online = navigator.onLine;
    $window.addEventListener("offline", function () {
        $rootScope.$apply(function () {
            $rootScope.online = false;
        });
    }, false);

});


app.controller('IGController', ["$scope", "$http", "$interval", "$timeout", "testFactory", "$localStorage", "CommonService", "$window", "$location", "$filter", "$rootScope", "globals", function ($scope, $http, $interval, $timeout, testFactory, $localStorage, CommonService, $window, $location, $filter, $rootScope, globals) {

    console.log("HIIII Angular");
    $scope.citylist = [{ id: 1, cityname: "Delhi" }, { id: 2, cityname: "Jaipur" }];
    $scope.formgender = "M";
    $scope.maleclass = "lmbutton activebt";
    $scope.femaleclass = "lmbutton";
    $scope.a1class = "lmbutton activebt";
    $scope.a2class = "lmbutton";
    $scope.chclass = ["childbt activebt", "childbt ", "childbt ", "childbt ", "childbt "];
    $scope.healthformdetails = true;
    $scope.showbtnloader = false;
    $scope.message = 'false';
    $scope.utmsourcedata = "";
    $scope.utmmediumdata = "";
    $scope.utmtermdata = "";
    $scope.device_name = "";
    $scope.creative = "";
    $scope.location = "";
    $scope.utmcampaigndata = "";
    // $scope.userName = "user";
    $scope.userEmail = ""
    $scope.gender = "male";
    $scope.selectedadult = 1;
    $scope.selectedchild = 0;
    //    $scope.formproname = "Health";
    $scope.disablemobile = false;
    $scope.gender = "male";
    $scope.showotp = false;
    $scope.btnnootp = false;

    // $scope.onChange = function(cbState) {
    //     $scope.message = cbState;
    // };
    $scope.formemail = "leadid@xyz.com";
    $scope.formproposer = "User";

    $scope.datefocus = function (flag) {
        if ($scope.IGDate != undefined) {
            if ($scope.IGDate.length == 2) {
                $('#Tel14').focus();

            }
        }

    }

    $scope.monthfocus = function (flag) {
        if ($scope.IGMonth != undefined) {
            if ($scope.IGMonth == 3) {
                $('#Tel15').focus();
            }
            else if ($scope.IGMonth.length == 2) {
                $('#Tel15').focus();

            }
        }

    }
    $scope.CloseOtpPop = function () {
        $location.search("OTP", null);
        window.history.back();
        $scope.otppopup = false;
    }
  



    $scope.logoref = function () {
      

        $timeout(function () {
            $window.location.href = "https://www.insurejoy.com";
        }, 100);

    }

    $scope.init = function () {
        var currentURL = $location.absUrl();

        var ur = $location.absUrl();
        var currentURL = $location.absUrl();
        if (currentURL.indexOf("dev.indiacover360.com") != -1) {
            globals.RedirectURL = "https://dev.indiacover360.com/Application/"; 
            globals.ServiceURL = "https://api.indiacover360.com";
            globals.IGwServiceURL = "https://api.indiacover360.com";
            globals.UIURL = "https://dev.indiacover360.com/HomePage";
            globals.landingPage = "https://dev.indiacover360.com";
            globals.mainPage = "https://dev.indiacover360.com/Application/?CPID=";
        }
        else if (currentURL.indexOf("qa.indiacover360.com") != -1) {
            globals.RedirectURL = "https://qa.indiacover360.com/Application/";
            globals.ServiceURL = "https://apiqa.indiacover360.com";
            globals.IGwServiceURL = "https://apiqa.indiacover360.com";
            globals.UIURL = "https://qa.indiacover360.com/HomePage";
            globals.landingPage = "https://qa.indiacover360.com";
            globals.mainPage = "https://qa.indiacover360.com/Application/?CPID=";
        }
        else if (currentURL.indexOf("insurejoy.com") != -1) {
            globals.RedirectURL = "https://insurejoy.com/Application/";
            globals.ServiceURL = "https://api.insurejoy.com";
            globals.IGwServiceURL = "https://api.insurejoy.com";
            globals.UIURL = "https://insurejoy.com/HomePage";
            globals.landingPage = "https://insurejoy.com";
            globals.mainPage = "https://insurejoy.com/Application/?CPID=";
        }
    
        commoncity();
        //CommonService.IGVisiterClickCount(currentURL,globals);
        var weburl = currentURL.split("?")[0];
        $scope.webUrl = $location.absUrl();
        var sourcevia = document.referrer;
        if ($scope.webUrl.indexOf("enhance") != -1 && $scope.webUrl.indexOf("child") != -1) {
            if (sourcevia.indexOf("google") != -1 || sourcevia.indexOf("yahoo") != -1 || sourcevia.indexOf("bing") != -1) {
                $scope.utmsourcedata = "organic";
                $scope.utmcampaigndata = "organic";
            }
        }

        var ur = $location.absUrl();
        $scope.quotesleadrequest = testFactory.GetEncryptedString();
        $scope.leadcreaterequestdata = testFactory.GetLeadCreationEncryptedString();
        $scope.otpcreaterequestdata = testFactory.GetOTPString1();
        var temp1 = $scope.webUrl.split("#")[0].split('&');
        var currentPage = temp1[0];
        console.log($location.absUrl());
        console.log(temp1);

        $scope.$root.showloader = false;

        for (var i = 0; i < temp1.length; i++) {
            if (temp1[i].indexOf("utm_source") != -1) {
                $scope.utmsourcedata = temp1[i].split('=')[1];
            }
            if (temp1[i].indexOf("utm_medium") != -1) {
                $scope.utmmediumdata = temp1[i].split('=')[1];
            }
            if (temp1[i].indexOf("utm_campaign") != -1) {
                $scope.utmcampaigndata = temp1[i].split('=')[1];
            }
            if (temp1[i].indexOf("utm_term") != -1) {
                $scope.utmtermdata = temp1[i].split('=')[1];
            }
            if (temp1[i].indexOf("partnerleadid") != -1) {
                $scope.utmpartnerleadiddata = temp1[i].split('=')[1];
            }
            if (temp1[i].indexOf("partneragentid") != -1) {
                $scope.utmpartneragentiddata = temp1[i].split('=')[1];
            }
            if (temp1[i].indexOf("location") != -1) {
                $scope.location = temp1[i].split('=')[1];
            }
            if (temp1[i].indexOf("creative") != -1) {
                $scope.creative = temp1[i].split('=')[1];
            }
            if (temp1[i].indexOf("device") != -1) {
                $scope.device_name = temp1[i].split('=')[1];
            }
        }

        if (document.referrer.indexOf("google") != -1 && ($scope.utmsourcedata == undefined || $scope.utmsourcedata == unknown || $scope.utmsourcedata == null || $scope.utmsourcedata == '')) {
            $scope.utmsourcedata = "organic";
        }

        $scope.analyticsURL = currentURL.split("?")[0];
        var analyticsdata = { "request": { "URL": $scope.analyticsURL, "Init": true, "Lead": false, "Redirect": false, "Personal": false, "Extra": false, "More": false } };
        
        $scope.carquotesleadrequest = testFactory.GetEncryptedString();
        $scope.leadcreaterequestdata = testFactory.GetLeadCreationEncryptedString();
        $scope.otpcreaterequestdata = testFactory.GetOTPString1();
        $location.search("OTP", null);
        $location.search("CityPop", null);
    }


    $scope.checkotp = function (otp) {
        if (otp == undefined || otp == null || otp == "") {
            $scope.wrongotpmsg = "Please Fill Correct OTP";
            $scope.wrongotpmsgshow = true;
        }
        else {
            $scope.wrongotpmsgshow = false;
        }
    }


    function commoncity(flag) {
        if (flag == 1) {
            $scope.CityValue = false;
        }
        else {
            $scope.CityValue = true;
        }

        $scope.citylisttemp = CommonService.citylist($scope, globals);
        $scope.citylisttemp.then(function (result) {
            result.data = [angular.fromJson(result.data)];
            var commoncitylist11 = result.data[0];
            console.log(commoncitylist11);
            $scope.commoncitystate = [];
            for (var i = 0; i < commoncitylist11.length; i++) {
                var temp = { cityid: commoncitylist11[i].City_Id + ", " + commoncitylist11[i].State_Id, cityname: commoncitylist11[i].City_Name + ", " + commoncitylist11[i].State_Name, cityCategory: commoncitylist11[i].City_Category };
                $scope.commoncitystate.push(temp);
            }
            var cities = $filter('orderBy')($scope.commoncitystate, 'cityname');
            $scope.commoncitystate = cities;
            //if (flag == 1) {
            //    $scope.commoncitystate = $filter('filter')($scope.commoncitystate, { cityname: $scope.searchText });
            //    if ($scope.commoncitystate.length == 0) {
            //        $scope.citymatch = "No match found......";
            //        $scope.commoncitystate = [];
            //    }
            //    else {
            //        $scope.citymatch = " We are fetching more cities.Continue Typing your city name...";
            //    }
            //}

        });
        $scope.cityplaceholder = "Type and select city...";
        $scope.disablecity = false;

    }


    $scope.updatedallcity = function () {
        var test = $filter('filter')($scope.commoncitystate, { cityname: $scope.searchText });
        if (test.length == 0 && $scope.CityValue == true) {
            commoncity(1);
        }

    }
   
    $scope.editmobile = function () {
        $scope.showotp = false;
        $scope.disablemobile = false;
    }

    $scope.healthvalidate = function (flag, investamount) {
        if (flag == 1) {
            if ($scope.userName == "" || $scope.userName == undefined || $scope.userName == null) {
                $scope.NameError = true;
            }
            else {
                $scope.NameError = false;
            }
        }
        else if (flag == 2) {
            if ($scope.userEmail == "" || $scope.userEmail == undefined || $scope.userEmail == null) {
                $scope.EmailError = true;
            }
            else {
                $scope.EmailError = false;
            }
        }
        else if (flag == 3) {
            if ($scope.userMobile == "" || $scope.userMobile == undefined || $scope.userMobile == null) {
                $scope.MobileError = true;
                $scope.wrongMobile = false;
            }
            else {
                $scope.MobileError = false;
            }
        }
    }
    $scope.testdate = function (flag, diff) {

        var check = 0;

        if ($scope.IGDate == undefined && flag == 1) {
            $scope.dateerror = true;
        }
        else if ($scope.IGMonth == undefined && flag == 2) {
            $scope.dateerror = true;
        }
        else if ($scope.IGYear == undefined && flag == 3) {
            $scope.dateerror = true;
        }
        else {
            $scope.dateerror = false;
        }
        if ($scope.IGDate != undefined && $scope.IGMonth != undefined && $scope.IGYear != undefined) {
            var d = new Date();
            var n = d.getFullYear();
            var m = d.getMonth();

            var yy = $scope.IGMonth + '-' + $scope.IGDate + '-' + $scope.IGYear;
            if (diff == 1) {
                $scope.age = $scope.getAge(yy);
            }

            if (isNaN($scope.age) == true || isNaN(parseInt($scope.IGMonth)) == true || isNaN(parseInt($scope.IGDate)) == true || isNaN(parseInt($scope.IGYear)) == true) {
                check = 1;
                $scope.age = undefined;
            }

            if ($scope.age < 18) {
                $scope.dateerror = true;
                check = 1;
            }

            if ((testFactory.onlynumber($scope.IGMonth) == "False") || (testFactory.onlynumber($scope.IGDate) == "False") || (testFactory.onlynumber($scope.IGYear) == "False")) {
                $scope.dateerror = true;
                check = 1;
            }

            else if ($scope.age > 100) {
                $scope.dateerror = true;
                check = 1;
            }
            else if ($scope.IGYear % 4 != 0 && $scope.IGYear % 100 != 0 && ($scope.IGMonth == 2 || $scope.IGMonth == 02) && $scope.IGDate > 28) {
                $scope.dateerror = true;
                check = 1;
            }
            else if ($scope.IGYear % 400 != 0 && $scope.IGYear % 100 == 0 && ($scope.IGMonth == 2 || $scope.IGMonth == 02) && $scope.IGDate > 28) {
                $scope.dateerror = true;
                check = 1;
            }

            if ($scope.IGMonth > 12 || $scope.IGMonth <= 0) {
                $scope.dateerror = true;
                check = 1;
            }
            else if (($scope.IGMonth == 2 || $scope.IGMonth == 02) && $scope.IGDate > 30) {
                $scope.dateerror = true;
                check = 1;
            }
            else if (($scope.IGMonth == 4 || $scope.IGMonth == 6 || $scope.IGMonth == 9 || $scope.IGMonth == 11) && $scope.IGDate > 30) {
                $scope.dateerror = true;
                check = 1;
            }

            if ($scope.IGDate > 31 || $scope.IGDate <= 0) {
                $scope.dateerror = true;
                check = 1;
            }
        }

        if (check == 1) {
            $scope.formdob = undefined;
            $scope.dateerror = true;
            $scope.chatageflag = false;
        }

        if (check == 0 && $scope.IGDate != undefined && $scope.IGMonth != undefined && $scope.IGYear != undefined) {
            $scope.dateerror = false;
            $scope.chatageflag = true;
            $scope.agemonth = $scope.getmonth(yy);
            console.log($scope.agemonth);
            $scope.formdob = $scope.IGDate + '-' + $scope.IGMonth + '-' + $scope.IGYear;
        }
    }

    $scope.getAge = function (dateString) {
        var today = new Date();
        var tempage = dateString.split("-");
        var birthDate = new Date(parseInt(tempage[2]), (parseInt(tempage[0]) - 1), parseInt(tempage[1]));
        var age = today.getFullYear() - birthDate.getFullYear();
        var m = today.getMonth() - birthDate.getMonth();
        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
            age--;
        }
        return age;
    }


    $scope.getmonth = function (dateString) {
        var tempage = dateString.split("-");
        var past_date = new Date(tempage[2], tempage[1], tempage[0]);
        var current_date = new Date();
        var difference = (current_date.getFullYear() * 12 + current_date.getMonth()) - (past_date.getFullYear() * 12 + past_date.getMonth());
        return difference;
    }

    $scope.gethealthquotespop1 = function () {
        var flag = 1;


        if (flag == 1) {

            $scope.$root.scrollhide = "whitebg";
            $scope.showbtnhealthloader1 = true;
            $localStorage.gender = $scope.gender;
            $localStorage.maleclass = $scope.maleclass;
            $localStorage.femaleclass = $scope.femaleclass;
            $scope.requestdata.Requests[0].Gender = $scope.gender;
            $localStorage.selectedItem2 = $scope.selectedItem2;
            $localStorage.gender = $scope.gender;
            $localStorage.maleclass = $scope.maleclass;
            $localStorage.femaleclass = $scope.femaleclass;
            $localStorage.selectedcitynamepop = $scope.selectedcitynamepop;
            $scope.$root.scrollhide = "whitebg";
            var currentPage = $location.absUrl();



            var analyticsdata = { "request": { "URL": $scope.analyticsURL, "Init": false, "Lead": false, "Redirect": false, "Personal": false, "Extra": false, "More": true } };


            $scope.requestdata.Requests[0].CityId = parseInt(($scope.selectedItem2.cityid.split(',')[0]).trim());
            var saveRequirementData = CommonService.saveHealthRequirementData1($scope, globals);

            saveRequirementData.then(function (pl) {


                redirectQuotes();
            });


        }
    }




    $scope.checkEmailError = function (email) {

        var emailmoberror = testFactory.emailvalidate(email);
        if (emailmoberror == "False") {
            $scope.emailError = !0
        } else {
            $scope.emailError = !1
        }
    }

    $scope.gethealthquotespop = function (cflag) {
        var flag = 1;
        $scope.cflag = cflag;
        //var emailmsg = testFactory.emailvalidate($scope.userEmail);
        //if (emailmsg == "False") {
        //    $scope.emailError = true;
        //    flag = 0;
        //}
        //else
        //    $scope.emailError = false;
        if ($scope.selectedadult > 2 || $scope.selectedadult == undefined) {

            flag = 0;
            $scope.adulterror = true;
        }
        else {
            $scope.adulterror = false;
        }
        if ($scope.selectedchild > 4 || $scope.selectedchild == undefined) {

            flag = 0;
            $scope.childerror = true;
        }
        else {
            $scope.childerror = false;
        }
        if ($scope.checkAge($scope.UserAge)) {
            flag = 0;
        }
        if ($scope.checkmobileerror()) {
            flag = 0;
        }
        if ($scope.checkcityerrors()) {
            flag = 0;
        }
        //if (($scope.userName == undefined || $scope.userName == "" || $scope.userName == null)) {

        //    flag = 0;
        //    $scope.nameerror = true;
        //    $scope.nameerror1 = false;
        //}
        //else if (testFactory.nameConsecutive($scope.userName) == "True") {
        //    flag = 0;
        //    $scope.nameerror1 = true;
        //    $scope.nameerror = false;
        //}
        //else {
        //    $scope.nameerror1 = false;
        //    $scope.nameerror = false;
        //}

        if (flag == 1) {
            $scope.showbtnhealthloader = true;
            $scope.showbtnleadloader = true;
            $scope.$root.scrollhide = "whitebg";
            $scope.formdob = $scope.IGDate + '-' + $scope.IGMonth + '-' + $scope.IGYear;


            $localStorage.formdob = $scope.formdob;
            $localStorage.gender = $scope.gender;
            $localStorage.selectedadult = $scope.selectedadult;
            $localStorage.selectedchild = $scope.selectedchild;
            $localStorage.IGDate = $scope.IGDate;
            $localStorage.IGMonth = $scope.IGMonth;
            $localStorage.IGYear = $scope.IGYear;

            $localStorage.maleclass = $scope.maleclass;
            $localStorage.femaleclass = $scope.femaleclass;
            var analyticsdata = { "request": { "URL": $scope.analyticsURL, "Init": false, "Lead": false, "Redirect": false, "Personal": true, "Extra": false, "More": false } };

            $localStorage.userMobile = $scope.userMobile;
            $localStorage.userEmail = $scope.userEmail;

            $scope.formdob1 = $scope.IGYear + '-' + $scope.IGMonth + '-' + $scope.IGDate;

            $scope.$root.scrollhide = "whitebg";


            $scope.formdob1 = $scope.IGYear + '-' + $scope.IGMonth + '-' + $scope.IGDate;
            var currentPage = $location.absUrl();
            $scope.utm_source = "";
            $scope.utm_campaign = "";
            $scope.utm_term = "";
            $scope.utm_medium = "";

            if (currentPage.indexOf("utm_source") != -1) { $scope.utm_source = currentPage.slice(currentPage.indexOf("utm_source=") + 11).split("&")[0]; }
            if (currentPage.indexOf("utm_campaign") != -1) { $scope.utm_campaign = currentPage.slice(currentPage.indexOf("utm_campaign=") + 13).split("&")[0]; }
            if (currentPage.indexOf("utm_term") != -1) { $scope.utm_term = currentPage.slice(currentPage.indexOf("utm_term=") + 9).split("&")[0]; }
            if (currentPage.indexOf("utm_medium") != -1) { $scope.utm_medium = currentPage.slice(currentPage.indexOf("utm_medium=") + 11).split("&")[0]; }

            if (flag == 1) {

            
                var data = { "userdetails": { "Adult": $scope.selectedadult, "Child": $scope.selectedchild, "Gender": $scope.gender, "Birthdate": $scope.formdob, "Citylist": $scope.selectedItem2, "Product": "Health", "Username": $scope.username, "Usermobile": $scope.usermobile, "Useremail": $scope.useremail, "UtmSource": $scope.utm_source, "UtmCampaign": $scope.utm_campaign, "UtmTerm": $scope.utm_term, "UtmMedium": $scope.utm_medium } };
                var resultdata = [];
                resultdata.push(data);

                var saveRequirementData = CommonService.saveHealthRequirementData($scope, globals);

                saveRequirementData.then(function (pl) {

                    $scope.IGQuoteId = JSON.parse(angular.toJson(pl.data.IGQuoteId));
                    $scope.leadCreationExceedMsg = JSON.parse(angular.toJson(pl.data.Message));
                    $scope.requestdata.IGQuoteId = $scope.IGQuoteId;
                    $scope.HealthSavetime = 1;
                    if ($scope.IGQuoteId > 0) {
                        $scope.otpFn(1);
                    }
                    else {
                        $scope.showbtnhealthloader = false;
                        $scope.showbtnleadloader = false;
                    }
                });


            }
        }
    }

    $scope.checkAge = function (age) {
        if (age > 100 || age < 28 || age == undefined || age == "" || age == null) {
            $scope.ageerror = true;
        }
        else {
            $scope.ageerror = false;
        }
        return $scope.ageerror;
    }

    $scope.checkageerror = function (flag) {

        if ($scope.dt == undefined) {
            $scope.ageerror = true;
            flag = 1;
            $scope.ageerrortext = "Enter Age Between 28 - 100";
        }
        else if ($scope.dt < 28 || $scope.dt > 100) {
            $scope.ageerror = true;
            flag = 1;
            $scope.ageerrortext = "Age should be between 28 - 100";
        }

        else {
            $scope.ageerror = false;
            $scope.ageerrortext = ""
        }
    }


    $scope.checkadult = function (flag) {
        $scope.selectedadult = flag;
        if (flag == 1) {
            $scope.a1class = "lmbutton activebt";
            $scope.a2class = "lmbutton";
        }
        else if (flag == 2) {
            $scope.a1class = "lmbutton ";
            $scope.a2class = "lmbutton activebt";
        }
    }
    $scope.checkadulterror = function (flag) {
        if ($scope.selectedadult == undefined) {
            $scope.adulterror = true;
            flag = 1;
            $scope.adulterrortext = "No of Adult 1 or 2";
        }

        else {
            $scope.adulterror = false;
            $scope.adulterrortext = ""
        }
    }
    $scope.checkchild = function (flag) {
        $scope.selectedchild = flag;
        $scope.chclass = ["childbt ", "childbt ", "childbt ", "childbt ", "childbt "];
        $scope.chclass[flag] = $scope.chclass[flag] + "activebt";
    }

    $scope.checkchilderror = function (flag) {
        if ($scope.selectedchild == undefined) {
            $scope.childerror = true;
            flag = 1;
            $scope.childerrortext = "Enter No of Child between 0 - 4";
        }
        else {
            $scope.childerror = false;
            $scope.childerrortext = ""
        }
    }
    // $scope.checkcityerrors = function (flag) {
    //     $scope.cityerror = false;
    //     $scope.citylabel = true;
    //     if ($scope.selectedItem2 == null) {
    //         flag = 1;
    //         $scope.cityerror = true;
    //     }
    //     else {
    //         $scope.cityerror = false;
    //         $scope.formcity = $scope.selectedItem2.cityname;
    //         $scope.cityid = $scope.selectedItem2.cityid.split(',')[0].toString();
    //     }
    // }

    $scope.checkcityerrors = function (flag) {
        $scope.cityerror = false;
        $scope.citylabel = true;
        if (!$scope.selectedItem2) {
            $scope.cityerror = true;
        }
        else {
            $scope.cityerror = false;
            $scope.formcity = $scope.selectedItem2.cityname;
            $scope.cityid = $scope.selectedItem2.cityid.split(',')[0].toString();
        }

        return $scope.cityerror;
    }

    $scope.checkgender = function (gen) {
        if (gen == 0) {
            $scope.maleclass = "lmbutton activebt";
            $scope.femaleclass = "lmbutton";
            $scope.gender = "M";
            $scope.formgender = "M";
        }
        else if (gen == 1) {
            $scope.maleclass = "lmbutton";
            $scope.femaleclass = "lmbutton  activebt";
            $scope.gender = "F";
            $scope.formgender = "F";
        }
    }


    $scope.checkmobileerror = function (flag) {
        if (!$scope.userMobile) {
            $scope.mobileerror = true;
            $scope.wrongMobile = false;
            $scope.mobileerrortext = "Mobile No. is required";
        }
        else if (testFactory.mobilevalidate($scope.userMobile) != "True") {
            $scope.mobileerror = true;
            $scope.wrongMobile = false;
            $scope.mobileerrortext = "Please enter valid mobile no.";
        }
        else {
            $scope.mobileerror = false;
            $scope.mobileerrortext = "";
        }

        return $scope.mobileerror;
    }

    $scope.checknameerror = function () {
        if ($scope.userName == undefined) {
            $scope.nameerror = true;
            $scope.nameerror1 = false;
        }

        else if (testFactory.nameConsecutive($scope.userName) == "True") {
            $scope.nameerror1 = true;
            $scope.nameerror = false;
        }

        else {
            $scope.nameerror = false;
            $scope.nameerror1 = false;

        }


    }

    $scope.leadcreationfn1 = function (flag) {
        $scope.showbtnleadloader = true;
        $scope.carquotesleadrequest.RequestString.MobileValidationRequest.User.UserName = "IGHEALTH2016";
        $scope.carquotesleadrequest.RequestString.MobileValidationRequest.User.UserPassword = "IG@HEALTH@2016";
        $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.User.UserName = "IGHEALTH2016";
        $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.User.UserPassword = "IG@HEALTH@2016";
        $scope.otpcreaterequestdata.RequestString.OTPValidationRequest.User.UserName = "IGHEALTH2016";
        $scope.otpcreaterequestdata.RequestString.OTPValidationRequest.User.UserPassword = "IG@HEALTH@2016";
        $scope.carquotesleadrequest.RequestString.MobileValidationRequest.User.Productid = 2;
        $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Products.product[0].productid = 2;
        $scope.otpcreaterequestdata.RequestString.OTPValidationRequest.User.Productid = 2;

        $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.leads.lead[0].leadId = $scope.IGQuoteId;


        if ($scope.userName != undefined) {
            $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.Name = $scope.userName;

        }
        else {
            $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.Name = "user"
        }

        if ($scope.userEmail != undefined && $scope.userEmail != "") {

            $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.EmailId = '2018@xyz.com';
        }


        $scope.carquotesleadrequest.RequestString.MobileValidationRequest.MobileValidation.isOTPRequire = "Yes";


        $scope.carquotesleadrequest.RequestString.MobileValidationRequest.MobileValidation.Mobile = $scope.userMobile;
        $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.MobileNo = $scope.userMobile;
        // $scope.carquotesleadrequest.RequestString.MobileValidationRequest.MobileValidation.isOTPRequireForValidMobile = "Yes";
        var response = CommonService.GetMobileVerificationWithOTPRequest($scope.carquotesleadrequest, globals);
        response.then(function (result) {
            console.log(result);
            result.data = [angular.fromJson(result.data)];
            $scope.otpcreaterequestdata.RequestString.OTPValidationRequest.OTPValidation.Tokenid = result.data[0].data.MobileValidationResponse.Tokenid;
            $scope.otpcreaterequestdata.RequestString.OTPValidationRequest.OTPValidation.Mobile = $scope.userMobile;
            $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.OriginPageid = 0;


            $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.User.Tokenid = result.data[0].data.MobileValidationResponse.Tokenid;

            $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.IsCallBackRequire = "false";

            if (result.data[0].data.MobileValidationResponse.Meassage == "OK" && result.data[0].data.MobileValidationResponse.Valid == "Yes") {
                $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.User.Tokenid = result.data[0].data.MobileValidationResponse.Tokenid;
                $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.MobileNo = $scope.userMobile;
                $scope.leadcreationfn4($scope.leadcreaterequestdata, flag);
            }
            else {
                $scope.showbtnhealthloader = false;
                $scope.otppopup = true;
                $location.search("OTP");
                $scope.showform1 = false;
                $scope.showform2 = true;
                $scope.btnnootp = false;
                $scope.showbtnleadloader = false;

            }
        });
    }

    $scope.leadcreationfn4 = function (value, flag, flag1) {

        var response = CommonService.GetMobileVerificationWithOTPRequest1($scope.leadcreaterequestdata, globals);
        response.then(function (result) {
            console.log(result);
            result.data = [angular.fromJson(result.data)];

            if (result.data[0].data.Error.ErrorCode == "0") {
                window.dataLayer = window.dataLayer || [];
                window.dataLayer.push({
                    'event': 'LeadSubmit',
                    'LeadID': $scope.IGQuoteId,
                    'Product': 'Health Insurance'
                });
                // $scope.healthformdetails1 = false;


                // var analyticsdata = {"request":{"URL":$scope.analyticsURL,"Init":false,"Lead":true,"Redirect":true,"Personal":false,"Extra":false,"More":false}};
                // $scope.UpdatePageAnalytics(analyticsdata);
                redirectQuotes();

            }

        });
    }

    function redirectQuotes() {

        $window.location.href = globals.RedirectURL +"Health?CPID="+ btoa($scope.IGQuoteId);

    }

    $scope.leadcreationfn7 = function (flag) {
        if ($scope.userOTP0 != undefined && $scope.userOTP1 != undefined && $scope.userOTP2 != undefined && $scope.userOTP3 != undefined) {
            $scope.userOTP = $scope.userOTP0.toString() + $scope.userOTP1.toString() + $scope.userOTP2.toString() + $scope.userOTP3.toString();
            $scope.wrongotpmsgshow = false;
        }
        else {
            $scope.wrongotpmsgshow = true;
        }
      
        $scope.otpcreaterequestdata.RequestString.OTPValidationRequest.OTPValidation.OTP = $scope.userOTP;
        var response = CommonService.GetMobileVerificationWithOTPRequest2($scope.otpcreaterequestdata, globals);
        response.then(function (result) {
            console.log(result);
            result.data = [angular.fromJson(result.data)];
            $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.User.Tokenid = result.data[0].data.Token.Tokenid;
            $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.MobileNo = $scope.userMobile;
            if (result.data[0].data.Error.ErrorCode == 1) {
                $scope.wrongotpmsg = "Enter Correct OTP";
                $scope.wrongotpmsgshow = true;
                $scope.showbtnloader = false;
                $scope.showbtnleadloader = false;
                $scope.otpcodeerror = true;
            }
            else {
                $scope.wrongotpmsgshow = false;
                $scope.showbtnleadloader = true;

                $rootScope.otpVerify = true;
                $scope.leadcreationfn4(result.data, flag, 1);
            }

        });
    }
    $scope.otpKey = function (flag, event) {
        if (flag == 0 && $scope.userOTP0 != undefined && $scope.userOTP0 != null && $scope.userOTP != "") {
            $scope.OTP1 = true;
            $scope.userOTP01 = 0;
        }
        else if (flag == 1 && $scope.userOTP1 != undefined && $scope.userOTP1 != null && $scope.userOTP1 != "") {
            $scope.OTP2 = true;
            $scope.userOTP11 = 0;
        }
        else if (flag == 2 && $scope.userOTP2 != undefined && $scope.userOTP2 != null && $scope.userOTP2 != "") {
            $scope.OTP3 = true;
            $scope.userOTP21 = 0;
        }
        else if (flag == 3 && $scope.userOTP3 != undefined && $scope.userOTP3 != null && $scope.userOTP3 != "") {

            $scope.userOTP31 = 0;
        }

        else if (flag == 1 && event.keyCode === 8 && $scope.userOTP1 == undefined) {
            if ($scope.userOTP11 == 1) {
                $scope.userOTP11 = 0;
                $scope.OTP0 = true;
            }
            else {
                $scope.userOTP11 = 1;
            }
        }
        else if (flag == 2 && event.keyCode === 8 && $scope.userOTP2 == undefined) {
            if ($scope.userOTP21 == 1) {
                $scope.userOTP21 = 0;
                $scope.OTP1 = true;
            }
            else {
                $scope.userOTP21 = 1;
            }
        }
        else if (flag == 3 && event.keyCode === 8 && $scope.userOTP3 == undefined) {
            if ($scope.userOTP31 == 1) {
                $scope.userOTP31 = 0;
                $scope.OTP2 = true;
            }
            else {
                $scope.userOTP31 = 1;
            }
        }
    }


    $scope.otpFn = function (flag) {

        if (flag == 2) {
            $scope.resendFlag = true;
        }
        else {
            $scope.resendFlag = false;
            $scope.showbtnleadloader = true;
        }
        $rootScope.otpVerify = false;

        $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.User.UserName = "IGHEALTH2016";
        $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.User.UserPassword = "IG@HEALTH@2016";
        $scope.otpcreaterequestdata.RequestString.OTPValidationRequest.User.UserName = "IGHEALTH2016";
        $scope.otpcreaterequestdata.RequestString.OTPValidationRequest.User.UserPassword = "IG@HEALTH@2016";
        $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Products.product[0].productid = 2;
        $scope.otpcreaterequestdata.RequestString.OTPValidationRequest.User.Productid = 2;

        $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.leads.lead[0].leadId = $scope.IGQuoteId;
        if ($scope.userName != undefined) {
            $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.Name = $scope.userName;
        }
        else {
            $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.Name = "user";
        }

        $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.EmailId = '2018@xyz.com';
        $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.MobileNo = $scope.userMobile;


        if ($scope.userEmail != undefined && $scope.userEmail != "") {

            $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.EmailId = '2018@xyz.com';
        }

        var resendFlag = CommonService.SendOTPReboot($scope, globals);
        resendFlag.then(function (result) {
            console.log(result);

            if (!(result.data.IsVerified == true || result.data.Message == "success" || result.data.Message == "Proceed to the quotes page without OTP verification")) {
                $scope.showbtnleadloader = false;
                $scope.wrongMobile = true;
                $scope.mobileError = false;
                $scope.wrongMobileMsg = result.data.Message;
                $scope.showbtnhealthloader = false;
            }
            else {


                $scope.healthOTPResult = result;
                $scope.editprof = false;
                $scope.resendFlag = false;
                otpconfirm();



            }
        });
    }


    function otpconfirm() {
        var result = $scope.healthOTPResult;
        var token = result.data.TokenId;

        $scope.otpcreaterequestdata.RequestString.OTPValidationRequest.OTPValidation.Tokenid = token;
        $scope.otpcreaterequestdata.RequestString.OTPValidationRequest.OTPValidation.Mobile = $scope.userMobile;
        $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.OriginPageid = 0;

        $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.IsCallBackRequire = "false";
        $scope.wrongMobile = false;
        $scope.showResend = false;
        $scope.showbtnleadloader = false;
        if (result.data.IsVerified == true) {

            $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.User.Tokenid = token;
            $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.MobileNo = $scope.userMobile;

            $scope.leadcreationfn4(token);

        }
        else if (result.data.Message == "success") {


            $scope.healthformdetails1 = false;
            $scope.showbtnhealthloader1 = false;
            $scope.showotpbox = true;
            $scope.showotp = true;
            $scope.showmobile = false;
            $scope.showcity = false;
            $scope.showform1 = false;
            $scope.showform2 = true;
            $scope.btnnootp = false;
            $scope.showbtnhealthloader1 = false;
            $scope.showbtnleadloader = false;

            $location.search("OTP");
            // $scope.leadcreationfn7(token);
            $scope.OTP0 = true;
            if (result.data.OTPResendTimer != undefined && result.data.OTPResendTimer != "") {
                var otpResendTimer = result.data.OTPResendTimer * 1000;
            }
            else {
                var otpResendTimer = 10000;
            }

            $scope.resendtime = parseInt(result.data.OTPResendTimer);
            resendTimer();

            $timeout(function () {
                $scope.showResend = true;
            }, otpResendTimer);
        }
        else if (result.data.Message == "Proceed to the quotes page without OTP verification") {
            $scope.showbtnhealthloader1 = false;
            $scope.showotp = false;
            $scope.showbtnleadloader = false;
            $scope.healthformdetails = false;
            $scope.healthformdetails1 = true;
            $window.location.href = globals.RedirectURL+"Health?CPID=" + btoa($scope.IGQuoteId);
        }


    }

    function resendTimer() {
        var time = $interval(function () {
            $scope.resendtime = $scope.resendtime - 1;
            if ($scope.resendtime == 0) {
                $interval.cancel(time);
            }
        }, 1000);
    }
  
    $scope.UpdateMobileNo = function () {
        $scope.healthformdetails = true;
        $scope.showotp = false;
        $scope.showbtnhealthloader = false;
        $scope.editprof = true;
        $location.search("UserInfo");
    }

    $scope.ShowMsgOnMobile = function (flag) {
        if (flag == 'Age') {
            $scope.AgeMsg = true;
        }
        else if (flag == 'Name') {
            $scope.NameMsg = true;
        }
        else if (flag == 'Mobile') {
            $scope.MobileMsg = true;
        }
        else if (flag == 'Name') {
            $scope.NameMsg = true;
        }
        else if (flag == 'City') {
            $scope.CityMsg = true;
        }
        else if (flag == 'Gender') {
            $scope.GenderMsg = true;
        }
        else if (flag == 'Mail') {
            $scope.EmailMsg = true;
        }
    }
    $scope.HideMsgOnMobile = function () {
        $scope.AgeMsg = false;
        $scope.MobileMsg = false;
        $scope.NameMsg = false;
        $scope.CityMsg = false;
        $scope.GenderMsg = false;
        $scope.EmailMsg = false;
    }
    $scope.encryptedData = function (value) {
        if (value) {
            const encrypted = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(value + globals.staticKey), CryptoJS.enc.Utf8.parse(globals.encryptionKey),
                {
                    keySize: 128 / 8,
                    iv: CryptoJS.enc.Utf8.parse(globals.encryptionIv),
                    mode: CryptoJS.mode.CBC,
                    padding: CryptoJS.pad.Pkcs7
                });
            return encrypted.toString();
        }
    }

}]);





//directive start....

app.directive('mdBlur', function ($timeout) {
    var directive = {
        restrict: 'A',
        link: function (scope, element, attributes) {
            $timeout(function () {
                angular.element(element[0].querySelector("input.md-input")).bind("blur", function () {
                    $timeout(function () {
                        scope.$eval(attributes.mdBlur);
                    }, 100);
                });
            }, 0);
        }
    };
    return directive;
});
app.directive("scrollBottom", function () {
    return {
        link: function (scope, element, attr) {
            var $id = $("#" + attr.scrollBottom);
            $(element).on("click", function () {
                $id.scrollTop($id[0].scrollHeight);
            });
        }
    }
});

app.directive('alphabetOnly', function () {
    return {
        require: 'ngModel',
        link: function (scope, element, attr, ngModelCtrl) {
            function fromUser(text) {
                if (text) {
                    text = text.toString();
                    var transformedInput = text.replace(/[^a-zA-Z]/g, '');
                    if (transformedInput !== text) {
                        ngModelCtrl.$setViewValue(transformedInput);
                        ngModelCtrl.$render()
                    }
                    return transformedInput
                }
                return undefined
            }
            ngModelCtrl.$parsers.push(fromUser)
        }
    }
});

app.directive('alphabetSpace', function () {
    return {
        require: 'ngModel',
        link: function (scope, element, attr, ngModelCtrl) {
            function fromUser(text) {
                if (text) {
                    text = text.toString();
                    var transformedInput = text.replace(/[^a-zA-Z\s]/g, '');
                    if (transformedInput !== text) {
                        ngModelCtrl.$setViewValue(transformedInput);
                        ngModelCtrl.$render()
                    }
                    return transformedInput
                }
                return undefined
            }
            ngModelCtrl.$parsers.push(fromUser)
        }
    }
});

app.directive('numbersOnly', function () {
    return {
        require: 'ngModel',
        link: function (scope, element, attr, ngModelCtrl) {
            function fromUser(text) {
                if (text) {
                    text = text.toString();
                    var transformedInput = text.replace(/[^0-9]/g, '');

                    if (transformedInput !== text) {
                        ngModelCtrl.$setViewValue(transformedInput);
                        ngModelCtrl.$render();
                    }
                    return transformedInput;
                }
                return undefined;
            }
            ngModelCtrl.$parsers.push(fromUser);
        }
    };
});
app.filter('startsWithLetter1', function () {
    return function (items, letter) {
        var filtered = [];
        if (letter != undefined) {
            var letterMatch = new RegExp(letter, 'i');
            var letterlength = letter.length;
            for (var i = 0; i < items.length; i++) {
                var item = items[i];
                if (letterMatch.test(item.cityname.substring(0, letterlength))) {
                    filtered.push(item);
                }
            }
            for (var i = 0; i < items.length; i++) {
                var item3 = items[i];
                var item1 = item3.cityname.split(',');
                var item2 = item1[0];
                if (letterMatch.test(item2.substring(0, item2.length))) {
                    if (filtered.indexOf(item3) == -1)
                        filtered.push(item3);
                }
            }
            return filtered;
        }
        else
            return items;
    };
});



//directive end.....


//Factory start....

var app = angular.module("App");
app.factory("testFactory", function () {
    return {
        GetOTPString1: function () {
            var leadrequest = { "RequestString": { "OTPValidationRequest": { "User": { "UserName": "123", "UserPassword": "123", "UserIP": "192.168.1.129", "Vendorid": "2018", "Productid": "3" }, "OTPValidation": { "Mobile": "9873008200", "OTP": "4073", "Tokenid": "WIN-I2MHQOTJM4B6df1875a-c2a4-46e0-8d68-0a889c269359" } } } };
            return leadrequest;
        },


        GetEncryptedString: function () {
            var bikeleadrequest = { "RequestString": { "MobileValidationRequest": { "User": { "UserName": "123", "UserPassword": "123", "UserIP": "192.168.1.129", "Vendorid": "2018", "Productid": "8" }, "MobileValidation": { "Mobile": undefined, "isOTPRequire": "No", "isOTPRequireForValidMobile": "No" } } } };
            return bikeleadrequest;
        },

        GetLeadCreationEncryptedString: function () {
            var bikeleadrequest = { "RequestString": { "LeadCreateRequest": { "User": { "UserName": "123", "UserPassword": "123", "UserIP": "192.168.1.129", "Vendorid": 2018, "Tokenid": "8a748771-574b-48b2-a113-ecb85bb3593f" }, "Products": { "product": [{ "productid": 8 }] }, "Visitor": { "leads": { "lead": [{ "leadId": "" }] }, "Name": "user", "EmailId": "2018@xyz.com", "MobileNo": "", "CountryCode": "+91", "IsCallBackRequire": "false", "OriginPageid": "2" } } } };
            return bikeleadrequest;
        },
        onlynumber: function (number) {
            var reg = /[^0-9]+/g;
            if ((number != undefined) && (!reg.test(number))) {
                var msgNumber = "True";
            }
            else {
                var msgNumber = "False";
            }
            return msgNumber;
        },
     
        emailvalidate: function (email) {
            var reg = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
            if (email != undefined && email.length != 4 && reg.test(email)) {
                var msgEmail = "True"
            } else {
                var msgEmail = "False"
            }
            return msgEmail
        },
        mobilevalidate: function (mobile) {
            var reg = /^([0|\+[0-9]{1,5})?([1-9][0-9]{9})$/; if (mobile != undefined && mobile.toString().length == 10 && reg.test(mobile)) { var msgMobile = "True"; }
            else { var msgMobile = "False"; }
            return msgMobile;
        },
    }
});

//Factory end.....


//service start...

var app = angular.module('App');

app.service('CommonService', function ($http, globals) {
    'use strict';
    var CommonService = {};

    CommonService.citylist = function ($scope, globals) {
        var vData = { IsTopLocation: $scope.CityValue };
        var request = $http({
            method: "POST",
            dataType: "json",
            url: globals.ServiceURL + '/CommonService.svc/web/GetLocations',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(vData)
        });
        return request;

    };

    CommonService.GetMobileVerificationWithOTPRequest = function (data, globals) {

        var requestdata = { RequestString: JSON.stringify(data.RequestString, null, "    ") };
        var request = $http({
            method: "POST",
            dataType: "jsonp",
            url: globals.ServiceURL + "/Lead.svc/web/GetMobileVerificationWithOTPRequest",
            data: JSON.stringify(requestdata)
        });
        return request;

    };

    CommonService.UpdatePageAnalytics = function (data, globals) {


        var request = $http({
            method: "POST",
            dataType: "jsonp",
            url: globals.ServiceURL + "/commonservice.svc/web/UpdatePageAnalytics",
            data: JSON.stringify(data)
        });
        return request;

    };

    CommonService.GetMobileVerificationWithOTPRequest1 = function (data, globals) {
        var requestdata = { RequestString: JSON.stringify(data.RequestString, null, "    ") };
        var request = $http({
            method: "POST",
            dataType: "jsonp",
            url: globals.ServiceURL + "/Lead.svc/web/GetLeadCreateRequest",
            data: JSON.stringify(requestdata)
        });
        return request;

    };
    CommonService.GetMobileVerificationWithOTPRequest2 = function (data, globals) {
        var requestdata = { RequestString: JSON.stringify(data.RequestString, null, "    ") };
        var request = $http({
            method: "POST",
            dataType: "jsonp",
            url: globals.ServiceURL + "/Lead.svc/web/GetOTPVerificationRequest",
            data: JSON.stringify(requestdata)
        });
        return request;



    };



    CommonService.saveHealthRequirementData = function ($scope, globals) {

        if ($scope.location == undefined || $scope.location == null) {
            $scope.location = ""
        }
        if ($scope.device_name == undefined || $scope.device_name == null) {
            $scope.device_name = ""
        }
        if ($scope.creative == undefined || $scope.creative == null) {
            $scope.creative = ""
        }

        var requestdata = {
            "IGQuoteId": 0,
            "IsDnc": true,
            "PartnerAgentId": $scope.utmpartneragentiddata,
            "PartnerLeadId": $scope.utmpartnerleadiddata,
            "MobileNo": $scope.userMobile,
            "RequestType": "",
            "IPAddress": "1.1.1.1",
            "LandingURL": $scope.webUrl,
            "Requests": [{
                "__type": "HealthRequest:#ServiceEntities",
                "Features": [],
                "ProductId": 2,
                "IsOffline": true,
                "CityId": parseInt($scope.selectedItem2.cityid),
                // "DOB": null,
                "Age": $scope.UserAge,
                // "Gender": $scope.gender,
                "InsurerIds": "",
                "IsQuotes": "",
                "NetworkHospital1": null,
                "NetworkHospital2": null,
                "NetworkHospital3": null,
                "NumberOfAdults": $scope.selectedadult,
                "NumberOfChildren": $scope.selectedchild,
                "PolicyTerm": 1,
                "SumInsured": 550000,
                "Medicaltest": 0,
                "DiseasID": "",
                "FeatureID": "",
                "HospitalID": ""
            }],
            "ServiceTimeOut": 123,
            "utmMedium": $scope.utmmediumdata,
            "utmCompaign": $scope.utmcampaigndata,
            "utmSource": $scope.utmsourcedata,
            "utmTerm": $scope.utmtermdata,
            "LPLocation": $scope.location,
            "LPAdId": $scope.creative,
            "LPDevice": $scope.device_name
        };
        $scope.requestdata = requestdata;
        var request = $http({
            method: "POST",
            dataType: "jsonp",
            url: globals.ServiceURL + "/QuoteService.svc/web/Save",
            data: requestdata
        });

        return request;
    };

    CommonService.saveHealthRequirementData1 = function ($scope, globals) {

        var request = $http({
            method: "POST",
            dataType: "jsonp",
            url: globals.ServiceURL + "/QuoteService.svc/web/Save",
            data: $scope.requestdata
        });
        return request;
    };
    CommonService.SendOTPReboot = function ($scope, globals) {
        var mbl = $scope.userMobile;
        var vData = { "CP_ID": $scope.IGQuoteId, "IsResend": $scope.resendFlag, "MobileNumber": mbl, "ClientKey": $scope.encryptedData($scope.IGQuoteId.toString() + mbl) }

        var request = $http({
            method: "POST",
            dataType: "json",
            url: globals.ServiceURL + "/Lead.svc/web/SendOTPReboot",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(vData)
        });
        return request;

    };

    CommonService.IGVisiterClickCount = function (url,globals) {

        var vData = { "IGURL": url }

        var request = $http({
            method: "POST",
            dataType: "json",
            url: globals.ServiceURL + "/CommonService.svc/web/IGVisiterClickCount",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(vData)
        });
        return request;

    };

    CommonService.stringifyWcf = function (json, flag) {
        var reISO = /^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)Z$/;
        var reMsAjax = /^\/Date\((d|-|.*)\)[\/|\\]$/;
        return JSON.stringify(json, function (key, value1) {
            var value;
            if (typeof value1 == "string") {
                if (flag == 1) {
                    value = value1.split('-')[1] + '-' + value1.split('-')[0] + '-' + value1.split('-')[2];
                }
                else if (flag == 3) {
                    value = value1.split('/')[0] + '-' + value1.split('/')[1] + '-' + value1.split('/')[2];
                }
                else {
                    value = value1.split('-')[1] + '-' + value1.split('-')[0] + '-' + value1.split('-')[2];
                }

                value1 = new Date(value);
                if (isNaN(Date.parse(value1))) {
                    var splitdata = value.split('-');
                    value = new Date(splitdata[2], splitdata[0] - 1, (splitdata[1]));
                }
                else {
                    value = new Date(value)
                }
                value = value.setDate(value.getDate() + 1);
                var s = JSON.parse(JSON.stringify(new Date(value)));
                var a = reISO.exec(s);
                if (a) {
                    var val = '/Date(' + new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4], +a[5], +a[6])).getTime() + ')/';
                    this[key] = val;
                    return val;

                }
            }
            return value;
        })
    }


    return CommonService;
});

//service end.....



